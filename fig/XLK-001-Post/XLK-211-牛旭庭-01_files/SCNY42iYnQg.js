if (self.CavalryLogger) { CavalryLogger.start_js_script(document.currentScript); }

__d("MSwipeInfiniteScrollerLoadMore",["DOM","DataAttributeUtils","MLegacyDataStore"],(function(a,b,c,d,e,f,g){var h=0,i=200;function a(a){if(!a)return;a=document.getElementById(a);if(!a)return;var b=d("MLegacyDataStore").get(a);if(!b||!b.scrollArea)return;var e=c("DOM").scry(a,"*","m-swipe-pymk-item")[0];e=c("DataAttributeUtils").getDataAttribute(e,"data-unit-size");e||(e=i);var f=b.scrollArea;if(f.getAutomaticPaging())f.reflow("auto");else{f=c("DOM").find(a,"*","scroll-area-body").children;a=[h];for(var g=1;g<f.length;g++)a[g]=a[g-1]+parseInt(e,10);b.scrollArea.reflow(a)}}g.reflow=a}),98);
__d("XFeedEgoImpressionLoggingController",["XController"],(function(a,b,c,d,e,f){e.exports=b("XController").create("/ego/feed/logging/impression/",{})}),null);
__d("CrossWindowEventEmitter",["CacheStorage","EventEmitter","FBJSON"],(function(a,b,c,d,e,f,g){"use strict";a=function(a){babelHelpers.inheritsLoose(b,a);function b(b){var e;e=a.call(this)||this;e.$CrossWindowEventEmitter2=b;e.$CrossWindowEventEmitter1=new(c("CacheStorage"))("localstorage",b+":");e.$CrossWindowEventEmitter1.addValueChangeCallback(function(b,c,f){c=b.split(":")[1];try{b=d("FBJSON").parse(f)}catch(a){b=void 0}if(b&&b.__v){(f=a.prototype.emit).call.apply(f,[babelHelpers.assertThisInitialized(e),c].concat(b.__v))}});return e}var e=b.prototype;e.emit=function(b){var c;for(var d=arguments.length,e=new Array(d>1?d-1:0),f=1;f<d;f++)e[f-1]=arguments[f];this.emitRemote.apply(this,[b].concat(e));(c=a.prototype.emit).call.apply(c,[this,b].concat(e))};e.emitRemote=function(a){for(var b=arguments.length,c=new Array(b>1?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];this.$CrossWindowEventEmitter1.set(a,c)};return b}(c("EventEmitter"));g["default"]=a}),98);
__d("MqttGlobalStreamCounter",["CrossWindowEventEmitter","MqttEnv","uuid"],(function(a,b,c,d,e,f,g){"use strict";a=function(){function a(){var a=this;this.isTabClosed=!1;this.otherTabs=new Map();this.thisTab={totalConnectionStreams:0};this.broadcastChannel=new(c("CrossWindowEventEmitter"))("MqttGlobalStreamCounter");this.broadcastChannel.addListener("count-updated",function(b){b=JSON.parse(String(b));var c=!1;a.otherTabs.has(b.key)||(c=!0);b.event=="DELETE"?a.otherTabs["delete"](b.key):b.event=="UPDATE"&&b.value!=null&&(a.otherTabs.set(b.key,b.value),c&&a.$1())});this.tabID=c("uuid")()}var b=a.prototype;b.streamRequested=function(){this.thisTab.totalConnectionStreams++,this.$1()};b.streamClosed=function(){this.thisTab.totalConnectionStreams>0&&(this.thisTab.totalConnectionStreams--,this.$1())};b.tabClosed=function(){if(this.isTabClosed)return;this.isTabClosed=!0;var a={key:this.tabID,event:"DELETE"};this.broadcastChannel.emitRemote("count-updated",JSON.stringify(a))};b.getGlobalState=function(){var a={totalConnectionStreams:this.thisTab.totalConnectionStreams};this.otherTabs.forEach(function(b){a.totalConnectionStreams+=b.totalConnectionStreams});return a};b.$1=function(){var a={key:this.tabID,event:"UPDATE",value:this.thisTab};this.broadcastChannel.emitRemote("count-updated",JSON.stringify(a))};return a}();var h=d("MqttEnv").Env.genGk(d("MqttEnv").MqttGkNames.mqttweb_global_connection_counter)?new a():{streamRequested:function(){},streamClosed:function(){},tabClosed:function(){},getGlobalState:function(){return{totalConnectionStreams:-1}}};b=function(){return h};g.getInstance=b}),98);